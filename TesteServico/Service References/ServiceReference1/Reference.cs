//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TesteServico.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Carona", Namespace="http://schemas.datacontract.org/2004/07/CaronaWCF")]
    [System.SerializableAttribute()]
    public partial class Carona : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescricaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinoLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinoLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrigemLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrigemLongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descricao {
            get {
                return this.DescricaoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescricaoField, value) != true)) {
                    this.DescricaoField = value;
                    this.RaisePropertyChanged("Descricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinoLatitude {
            get {
                return this.DestinoLatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinoLatitudeField, value) != true)) {
                    this.DestinoLatitudeField = value;
                    this.RaisePropertyChanged("DestinoLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinoLongitude {
            get {
                return this.DestinoLongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinoLongitudeField, value) != true)) {
                    this.DestinoLongitudeField = value;
                    this.RaisePropertyChanged("DestinoLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrigemLatitude {
            get {
                return this.OrigemLatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrigemLatitudeField, value) != true)) {
                    this.OrigemLatitudeField = value;
                    this.RaisePropertyChanged("OrigemLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrigemLongitude {
            get {
                return this.OrigemLongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrigemLongitudeField, value) != true)) {
                    this.OrigemLongitudeField = value;
                    this.RaisePropertyChanged("OrigemLongitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICarona")]
    public interface ICarona {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/GetCaronas", ReplyAction="http://tempuri.org/ICarona/GetCaronasResponse")]
        TesteServico.ServiceReference1.Carona[] GetCaronas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/GetCaronas", ReplyAction="http://tempuri.org/ICarona/GetCaronasResponse")]
        System.Threading.Tasks.Task<TesteServico.ServiceReference1.Carona[]> GetCaronasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/GetCarona", ReplyAction="http://tempuri.org/ICarona/GetCaronaResponse")]
        TesteServico.ServiceReference1.Carona GetCarona(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/GetCarona", ReplyAction="http://tempuri.org/ICarona/GetCaronaResponse")]
        System.Threading.Tasks.Task<TesteServico.ServiceReference1.Carona> GetCaronaAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/CadastreCarona", ReplyAction="http://tempuri.org/ICarona/CadastreCaronaResponse")]
        string CadastreCarona(string descricao, string origem, string destino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/CadastreCarona", ReplyAction="http://tempuri.org/ICarona/CadastreCaronaResponse")]
        System.Threading.Tasks.Task<string> CadastreCaronaAsync(string descricao, string origem, string destino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/ExcluaCarona", ReplyAction="http://tempuri.org/ICarona/ExcluaCaronaResponse")]
        string ExcluaCarona(TesteServico.ServiceReference1.Carona carona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarona/ExcluaCarona", ReplyAction="http://tempuri.org/ICarona/ExcluaCaronaResponse")]
        System.Threading.Tasks.Task<string> ExcluaCaronaAsync(TesteServico.ServiceReference1.Carona carona);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICaronaChannel : TesteServico.ServiceReference1.ICarona, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CaronaClient : System.ServiceModel.ClientBase<TesteServico.ServiceReference1.ICarona>, TesteServico.ServiceReference1.ICarona {
        
        public CaronaClient() {
        }
        
        public CaronaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CaronaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaronaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaronaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TesteServico.ServiceReference1.Carona[] GetCaronas() {
            return base.Channel.GetCaronas();
        }
        
        public System.Threading.Tasks.Task<TesteServico.ServiceReference1.Carona[]> GetCaronasAsync() {
            return base.Channel.GetCaronasAsync();
        }
        
        public TesteServico.ServiceReference1.Carona GetCarona(string ID) {
            return base.Channel.GetCarona(ID);
        }
        
        public System.Threading.Tasks.Task<TesteServico.ServiceReference1.Carona> GetCaronaAsync(string ID) {
            return base.Channel.GetCaronaAsync(ID);
        }
        
        public string CadastreCarona(string descricao, string origem, string destino) {
            return base.Channel.CadastreCarona(descricao, origem, destino);
        }
        
        public System.Threading.Tasks.Task<string> CadastreCaronaAsync(string descricao, string origem, string destino) {
            return base.Channel.CadastreCaronaAsync(descricao, origem, destino);
        }
        
        public string ExcluaCarona(TesteServico.ServiceReference1.Carona carona) {
            return base.Channel.ExcluaCarona(carona);
        }
        
        public System.Threading.Tasks.Task<string> ExcluaCaronaAsync(TesteServico.ServiceReference1.Carona carona) {
            return base.Channel.ExcluaCaronaAsync(carona);
        }
    }
}
